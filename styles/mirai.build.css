/**! 
 * Mirai CSS - 未来
 * GitHub: https://github.com/aipx-proto/mirai-css
 * Demo: https://aipx-proto.github.io/mirai-css
 * LLMs.txt: https://github.com/aipx-proto/mirai-css/blob/main/styles/mirai.css.md
!*/

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-Light.ttf") format("truetype");
  font-weight: 300;
  font-style: normal;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-Light-Italic.ttf") format("truetype");
  font-weight: 300;
  font-style: italic;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-Italic.ttf") format("truetype");
  font-weight: 400;
  font-style: italic;
}

/* no medium font 500? */

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-SemiBold.ttf") format("truetype");
  font-weight: 600;
  font-style: normal;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-SemiBold-Italic.ttf") format("truetype");
  font-weight: 600;
  font-style: italic;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-Bold-Italic.ttf") format("truetype");
  font-weight: 700;
  font-style: italic;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-ExtraBold.ttf") format("truetype");
  font-weight: 800;
  font-style: normal;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-ExtraBold-Italic.ttf") format("truetype");
  font-weight: 800;
  font-style: italic;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-Black.ttf") format("truetype");
  font-weight: 900;
  font-style: normal;
}

@font-face {
  font-family: "Aptos";
  src: url("font-aptos/Aptos-Black-Italic.ttf") format("truetype");
  font-weight: 900;
  font-style: italic;
}

/* Variable Font */

@font-face {
  font-family: "Monaspace Neon";
  font-weight: 200 800;
  font-stretch: 75% 125%;
  font-style: oblique 0deg 12deg;
  font-display: swap;
  src: url("font-monaspace-neon/MonaspaceNeonVarVF[wght,wdth,slnt].woff2") format("woff2-variations");
}

:root {
  --mri-font-size-1: 40px;
  --mri-font-size-2: 28px;
  --mri-font-size-3: 20px;
  --mri-font-size-4: 16px;
  --mri-font-size-5: 14px;
  --mri-font-size-6: 12px;
  --mri-font-size-7: 10px;

  --mri-font-family-sans: "Aptos", "Segoe UI", "Segoe UI Web (West European)", -apple-system, BlinkMacSystemFont, Roboto,
    "Helvetica Neue", sans-serif;
  --mri-font-family-mono: "Monaspace Neon", Consolas, Menlo, "Courier New", Courier, monospace;
  /* smaller font size optically aligns the x-height of Monaspace Neon and Aptos */
  --mri-font-family-mono-scale: 0.9em;

  --mri-font-weight-regular: 400;
  --mri-font-weight-bold: 600;

  --mri-border-radius-small: 4px;
  --mri-border-radius-medium: 8px;
  --mri-border-radius-large: 12px;
  --mri-border-radius-xlarge: 16px;
  --mri-border-radius-circular: 10000px;

  --mri-duration-rest: 100ms;
  --mri-duration-hover: 150ms;
  --mri-duration-hover: 50ms;

  --mri-color-shadow-ambient: rgba(0, 0, 0, 0.24);
  --mri-color-shadow-key: rgba(0, 0, 0, 0.28);

  --mri-shadow-2: 0 0 2px var(--mri-color-shadow-ambient), 0 1px 2px var(--mri-color-shadow-key);
  --mri-shadow-4: 0 0 2px var(--mri-color-shadow-ambient), 0 2px 4px var(--mri-color-shadow-key);
  --mri-shadow-8: 0 0 2px var(--mri-color-shadow-ambient), 0 4px 8px var(--mri-color-shadow-key);
  --mri-shadow-16: 0 0 2px var(--mri-color-shadow-ambient), 0 8px 16px var(--mri-color-shadow-key);
  --mri-shadow-28: 0 0 8px var(--mri-color-shadow-ambient), 0 14px 28px var(--mri-color-shadow-key);
  --mri-shadow-64: 0 0 8px var(--mri-color-shadow-ambient), 0 32px 64px var(--mri-color-shadow-key);

  --mri-color-background-overlay: rgba(0, 0, 0, 0.5);

  --mri-opacity-disabled: 0.5;
}

.mri-size-small {
  --mri-size-height: 24px;
  --mri-size-font: var(--mri-font-size-6);
  --mri-size-padding: 8px;
  --mri-size-icon: 12px;
}

:root,
.mri-size-medium {
  --mri-size-height: 32px;
  --mri-size-font: var(--mri-font-size-5);
  --mri-size-padding: 12px;
  --mri-size-icon: 16px;
}

.mri-size-large {
  --mri-size-height: 40px;
  --mri-size-font: var(--mri-font-size-4);
  --mri-size-padding: 16px;
  --mri-size-icon: 20px;
}

.mri-shape-square {
  --mri-border-radius: var(--mri-border-radius-small);
}

:root,
.mri-shape-rounded {
  --mri-border-radius: var(--mri-border-radius-medium);
}

.mri-shape-circular {
  --mri-border-radius: var(--mri-border-radius-circular);
}

:root,
.mri-theme-dark {
  color-scheme: dark;

  --mri-color-background-1: #1f1f1f;
  --mri-color-background-2: #141414;
  --mri-color-background-3: #0a0a0a;
  --mri-color-background-4: #000000;

  --mri-color-border-1: #666666;
  --mri-color-border-2: var(--mri-color-background-3);

  --mri-color-text-1: #ffffff;
  --mri-color-text-2: #d6d6d6;
  --mri-color-text-3: #999999;
  --mri-color-text-4: #5c5c5c;

  --mri-color-brand-base: #479ef5;
  --mri-color-brand-text: #479ef5;


  &,
  .mri-appearance-outline {
    --mri-interactive-rest: var(--mri-color-background-1);
    --mri-interactive-hover: oklch(from var(--mri-interactive-rest) calc(l * 0.8) c h);
    --mri-interactive-pressed: oklch(from var(--mri-interactive-rest) calc(l * 0.65) c h);
  }
  .mri-appearance-primary {
    --mri-interactive-rest: var(--mri-color-brand-base);
    --mri-interactive-hover: oklch(from var(--mri-color-brand-base) calc(l * 0.85) c h);
    --mri-interactive-pressed: oklch(from var(--mri-color-brand-base) calc(l * 0.7) c h);
  }
  .mri-appearance-subtle {
    --mri-interactive-rest: var(--mri-color-background-2);
  }
  .mri-appearance-transparent {
    --mri-interactive-rest: transparent;
  }
}

.mri-theme-light {
  color-scheme: light;

  --mri-color-background-1: lch(100% 0 0); /* white */
  --mri-color-background-2: #f5f5f5;
  --mri-color-background-3: #f0f0f0;
  --mri-color-background-4: #e6e6e6;

  --mri-color-border-1: #d1d1d1;
  --mri-color-border-2: var(--mri-color-background-3);

  --mri-color-text-1: #000000;
  --mri-color-text-2: #424242;
  --mri-color-text-3: #707070;
  --mri-color-text-4: #bdbdbd;

  --mri-color-brand-base: #0f6cbd;
  --mri-color-brand-text: #115ea3;

  &,
  .mri-appearance-outline {
    --mri-interactive-rest: var(--mri-color-background-1);
    --mri-interactive-hover: oklch(from var(--mri-color-background-1) calc(l * 0.92) c h);
    --mri-interactive-pressed: oklch(from var(--mri-color-background-1) calc(l * 0.88) c h);
  }
  .mri-appearance-primary {
    --mri-interactive-rest: var(--mri-color-brand-base);
    --mri-interactive-hover: oklch(from var(--mri-color-brand-base) calc(l * 0.85) c h);
    --mri-interactive-pressed: oklch(from var(--mri-color-brand-base) calc(l * 0.7) c h);
  }
  .mri-appearance-subtle {
    --mri-interactive-rest: var(--mri-color-background-2);
  }
  .mri-appearance-transparent {
    --mri-interactive-rest: transparent;
  }
}

html,
body {
  margin: 0;
  padding: 0;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

:root, .mri-theme-dark {
  --mri-icon-check: url('data:image/svg+xml,<svg style="fill:black;" viewBox="0 0 12 12" xmlns="http://www.w3.org/2000/svg"><path d="M9.76 3.2c.3.29.32.76.04 1.06l-4.25 4.5a.75.75 0 0 1-1.08.02L2.22 6.53a.75.75 0 0 1 1.06-1.06l1.7 1.7L8.7 3.24a.75.75 0 0 1 1.06-.04Z"></path></svg>');
  --mri-icon-chevron-right: url('data:image/svg+xml,<svg style="fill:white;" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M7.65 4.15c.2-.2.5-.2.7 0l5.49 5.46c.21.22.21.57 0 .78l-5.49 5.46a.5.5 0 0 1-.7-.7L12.8 10 7.65 4.85a.5.5 0 0 1 0-.7Z"></path></svg>');
}

.mri-theme-light {
  --mri-icon-check: url('data:image/svg+xml,<svg style="fill:white;" viewBox="0 0 12 12" xmlns="http://www.w3.org/2000/svg"><path d="M9.76 3.2c.3.29.32.76.04 1.06l-4.25 4.5a.75.75 0 0 1-1.08.02L2.22 6.53a.75.75 0 0 1 1.06-1.06l1.7 1.7L8.7 3.24a.75.75 0 0 1 1.06-.04Z"></path></svg>');
  --mri-icon-chevron-right: url('data:image/svg+xml,<svg style="fill:black;" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path d="M7.65 4.15c.2-.2.5-.2.7 0l5.49 5.46c.21.22.21.57 0 .78l-5.49 5.46a.5.5 0 0 1-.7-.7L12.8 10 7.65 4.85a.5.5 0 0 1 0-.7Z"></path></svg>');
}

.mri-emojicon{
  height: var(--mri-sizeIcon);
  width: var(--mri-sizeIcon);
  font-style: normal;
  filter: grayscale(1);
}

details {
  --_timing-open: 0.2s;
  --_timing-close: 0.07s;
  --_size-marker: 20px;

  summary {
    display: flex;
    align-items: center;
    gap: 8px;

    cursor: pointer;

    &::marker {
      content: "";
    }

    list-style: none;
    &:before {
      content: var(--mri-icon-chevron-right);
      height: var(--_size-marker);
      width:  var(--_size-marker);
      display: inline-block;
      transform: rotate(0deg);
      transform-origin: center;
      transition: transform var(--_timing-open) ease-in-out;
    }
  }

  &[open] {
    summary {
      &:before {
        transform: rotate(90deg);
      }
    }
  }

  &::details-content {
    opacity: 0.2;
    transform: translateY(-4px);
    transition-property: opacity, transform, content-visibility, max-height;
    transition-duration: var(--_timing-close);
    transition-timing-function: ease-out;
    transition-behavior: allow-discrete;
  }
  
  &[open]::details-content {
    opacity: 1;
    transform: translateY(0);
    transition-duration: var(--_timing-open);
    transition-timing-function: ease-in;
  }
}

html {
  background-color: var(--mri-color-background-3);
}

:where(button:not(.mri-tab),
  input[type="button"],
  input[type="submit"],
  input[type="reset"],
  a.mri-button,
  select.mri-button,
  .mri-button),
::-webkit-file-upload-button {
  cursor: pointer;
  appearance: none;
  line-height: 1;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  /* default circular */
  --_border-radius: var(--mri-border-radius-circular);

  [class*="mri-shape-"] &,
  &[class*="mri-shape-"] {
    --_border-radius: var(--mri-border-radius);
  }

  border-radius: var(--_border-radius, var(--mri-border-radius));

  font-weight: var(--mri-font-weight-bold);
  font-size: var(--mri-size-font);
  color: var(--mri-color-text-1);
  min-height: var(--mri-size-height);
  padding: 0 var(--mri-size-padding);

  background-color: var(--mri-interactive-rest);
  transition: background-color var(--mri-duration-rest) linear;
  transition-property: background-color,
  color,
  border-color;

  &:not(:disabled) {
    &:hover {
      background-color: var(--mri-interactive-hover);
      transition-duration: var(--mri-duration-hover);

      &.mri-appearance-transparent,
      &.mri-appearance-subtle {
        color: var(--mri-color-brand-text);
      }
    }

    &:active,
    &.mri-active {
      background-color: var(--mri-interactive-pressed);
      transition-duration: var(--mri-duration-hover);

      &.mri-appearance-transparent,
      &.mri-appearance-subtle {
        color: var(--mri-color-brand-text);
      }
    }
  }

  border: 1px solid var(--mri-color-border-1);

  .mri-input & {
    border: none;
    background-color: transparent;

    &:hover {
      background-color: var(--mri-interactive-rest);
    }

    &:active {
      background-color: var(--mri-interactive-active);
    }

    --_border-radius: var(--mri-border-radius);
  }

  &.mri-appearance-subtle,
  &.mri-appearance-primary,
  &.mri-appearance-transparent {
    border-color: transparent;
  }

  &.mri-appearance-primary {
    color: var(--mri-color-background-4);
  }

  &.mri-icon-only {
    padding: 0;
    width: var(--mri-size-height);
    height: var(--mri-size-height);
  }

  .mri-menu & {
    --_border-radius: var(--mri-border-radius-small);
    border-color: transparent;
    justify-content: flex-start;
    font-weight: var(--fontWeightNormal);
  }
}

a.mri-button {
  text-decoration: none;
}

input[type="file"] {
  &::-webkit-file-upload-button {
    font-family: inherit;
  }

  &:hover {
    &::-webkit-file-upload-button {
      background-color: var(--mri-interactive-hover);
      transition-duration: var(--mri-duration-hover);
    }
  }

  &:active {
    &::-webkit-file-upload-button {
      background-color: var(--mri-interactive-pressed);
      transition-duration: var(--mri-duration-hover);
    }
  }
}

input[type="checkbox"]:not(.mri-switch),
input[type="radio"] {
  --_color-border: var(--mri-color-border-1);
  --_color-background: var(--mri-color-background-2);
  --_color-checked: var(--mri-color-brand-base);

  --_size-dimension: var(--mri-size-icon);

  appearance: none;
  margin: 0;
  width: var(--_size-dimension);
  height: var(--_size-dimension);

  cursor: pointer;

  border: 1px solid var(--_color-border);
  border-radius: var(--_border-radius);
  background-color: var(--_color-background);

  label & {
    vertical-align: middle;
  }

  position: relative;

  &:after {
    content: "";
    display: block;
    position: absolute;
    inset: 2px;
    border-radius: var(--_border-radius);
    background-color: var(--_color-checked);
    opacity: 0;
  }

  &:checked {
    border-color: var(--_color-checked);
  }

  &:disabled {
    --_color-checked: var(--_color-border);
  }
}

input[type="radio"] {
  --_border-radius: var(--mri-border-radius-circular);
  &:after {
    border-radius: var(--_border-radius);
  }
  &:checked:after {
    opacity: 1;
  }
}

input[type="checkbox"]:not(.mri-switch) {
  --_border-radius: var(--mri-border-radius-small);

  &:after {
    border-radius: calc(var(--_border-radius) - 2px);
  }

  &:checked:after {
    inset: 0;
    opacity: 1;
    background-image: var(--mri-icon-check);
    background-position: center;
    background-repeat: no-repeat;
    background-size: calc(var(--_size-dimension) - 4px);
  }

  &:indeterminate {
    border-color: var(--_color-checked);
  }
  &:indeterminate:after {
    inset: 4px;
  }

  &:indeterminate:after,
  &:checked:after {
    opacity: 1;
  }
}

.mri-control-group {
  display: flex;
  gap: 1px;

  /* TODO: exception for mri-appearance-primary */

  & > :not(:first-child):not(:last-child) {
    border-radius: 0;
  }

  & > :first-child {
    border-top-right-radius: 0;
    border-bottom-right-radius: 0;
  }

  & > :last-child {
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }

  /* applies to button.css and input.css */
  /* buttons and inputs with outline should share border rather than have a gap */
  & > :not(:first-child) {
    &:not([class*="mri-appearance-"]),
    &.mri-appearance-outline {
      margin-left: -2px;
    }
  }
}

dialog {
  color: inherit;

  border: 1px solid var(--mri-color-border-1);
  background-color: var(--mri-color-background-1);
  box-shadow: var(--mri-shadow-16);
  border-radius: var(--mri-border-radius-large);
  overflow: hidden;

  padding: 12px 24px;

  &:has(main, footer, header) {
    padding: 0;

    header {
      padding: 24px 24px 12px 24px;

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        margin: 0;
      }
    }

    main {
      padding: 12px 24px;
      /* the main content should be scrollable */
      max-height: 60vh;
      overflow-y: auto;
    }
    
    footer {
      padding: 12px 24px;
      border-top: 1px solid var(--mri-color-border-2);
      display: flex;
      justify-content: flex-end;
      gap: 12px;
    }
  }

  .mri-dialog-close {
    position: absolute;
    top: 0;
    right: 0;
    margin: 12px;
  }

  /* Open/Close Animation */

  --_duration: 0.2s;

  &,
  &::backdrop {
    transition: opacity var(--_duration) ease-in-out, transform var(--_duration) ease-in-out,
      overlay var(--_duration) allow-discrete, display var(--_duration) allow-discrete;
    opacity: 0;
  }

  transform: scale(0.8);
  &::backdrop {
    background-color: var(--mri-color-background-overlay);
  }

  &[open] {
    opacity: 1;
    transform: scale(1);
  }

  &[open]::backdrop {
    opacity: 1;
  }

  @starting-style {
    &[open] {
      opacity: 0;
      transform: scale(0.8);

      &::backdrop {
        opacity: 0;
      }
    }
  }

}

:disabled, [disabled], .mri-disabled {
  cursor: not-allowed;
  opacity: var(--mri-opacity-disabled);

  label:has(&) {
    opacity: var(--mri-opacity-disabled);
  }
  label:has(&) & {
    opacity: 1;
  }
}

fieldset{
    border: 1px solid var(--mri-color-border-1);
    border-radius: var(--mri-border-radius);
    padding: var(--mri-size-padding);
    margin: 0px;
}

legend {
    padding: 0 4px;
    margin: 0 -4px;
    font-size: inherit;
    font-weight: var(--mri-font-weight-bold);
    color: var(--mri-color-text-1);
}

:where(input:not([type]),
  input[type="text"],
  input[type="email"],
  input[type="password"],
  input[type="number"],
  input[type="date"],
  input[type="datetime-local"],
  input[type="month"],
  input[type="week"],
  input[type="time"],
  input[type="search"],
  input[type="color"],
  input[type="url"],
  /* input[type="file"], */
  input[type="tel"],
  select:not(.mri-button),
  textarea,
  .mri-input) {

  font-size: var(--mri-size-font);
  color: var(--mri-color-text-1);

  :where(.mri-input>&) {
    appearance: none;
    background: none;
    border: none;
    outline: none;
    flex: 1 1 auto
  }

  :where(:not(.mri-input)>&) {
    --_color-background: var(--mri-color-background-2);
    --_color-border: transparent;

    display: inline-flex;
    align-items: center;
    justify-content: start;

    border-radius: var(--mri-border-radius);
    min-height: var(--mri-size-height);
    padding: 0 var(--mri-size-padding);
    background-color: var(--_color-background);
    border: 1px solid var(--_color-border);

    --_gradient-underline-focus: linear-gradient(to bottom, var(--mri-color-brand-base), var(--mri-color-brand-base));
    --_gradient-underline-hover: linear-gradient(to bottom, var(--mri-color-border-1), var(--mri-color-border-1));

    --_background-underline-focus: var(--_gradient-underline-focus) 50% 100%/0% 2px;
    --_background-underline-hover: var(--_gradient-underline-hover) 50% 100%/100% 0px;

    background: var(--_background-underline-focus), var(--_background-underline-hover), var(--_color-background);
    background-repeat: no-repeat;

    transition: 0.1s ease-in;
    transition-property: background-size, background-position, border-color;

    &:not(:disabled):not([readonly]):not(.mri-disabled) {

      &:hover {
        --_background-underline-hover: var(--_gradient-underline-hover) 50% 100%/100% 1px;
        transition-duration: 0.15s;
        transition-timing-function: ease-out;
      }

      &:focus,
      &:has(input:focus, textarea:focus, select:focus) {
        --_background-underline-focus: var(--_gradient-underline-focus) 50% 100%/100% 2px;
        transition-duration: 0.15s;
        transition-timing-function: ease-out;
        border-bottom-color: transparent;
      }

    }

    outline: transparent solid 2px;

    &.mri-appearance-outline {
      --_color-border: var(--mri-color-border-1);
    }

  }
}

.mri-input {
  display: inline-flex;
  align-items: center;
  justify-content: start;
  align-items: baseline;
  padding: 4px;
  gap: 4px;


}

input[type="number"],
input[type="date"] {
  font-family: var(--mri-font-family-mono);
  font-size: var(--mri-font-family-mono-scale);
}

input[type="number"] {
  --_size-spin-button-gap: 2px;
  padding-right: 0;

  &::-webkit-inner-spin-button {
    height: calc(var(--mri-size-height) - var(--_size-spin-button-gap));
    margin-bottom: var(--_size-spin-button-gap);
  }
}

textarea {
  padding-block: 0.5em;
  font-family: var(--mri-font-family-sans);
  /* resize: vertical;
  field-sizing: content;
  width: 100%; */
}

input[type="color"] {
  padding: 0;
  height: var(--mri-size-height);
  width: var(--mri-size-height);

  &::-webkit-color-swatch-wrapper {
    padding: 4px;
  }

  &::-webkit-color-swatch {
    border: none;
    border-radius: calc(var(--mri-border-radius) - 4px);
  }
}

input[type="email"],
input[type="password"],
input[type="number"],
input[type="date"],
input[type="search"],
input[type="tel"],
input[type="text"],
input[type="url"] {
  cursor: text;
}

input[type="color"],
input[type="file"],
::-webkit-calendar-picker-indicator,
::-webkit-inner-spin-button,
select {
  cursor: pointer;
}

:where(a:not(.mri-button):not(.mri-tab)) {
  color: var(--mri-color-brand-text);
  text-decoration: none;
  &:hover {
    color: oklch(from var(--mri-color-brand-text) calc(l * 0.9) c h);
    text-decoration: underline;
  }
  &:active {
    color: var(--mri-color-brand-text);
  }
}

[popover] {
  border: 1px solid var(--mri-color-border-1);
  background-color: var(--mri-color-background-1);
  box-shadow: var(--mri-shadow-16);
  padding: 8px 12px;
  border-radius: var(--mri-border-radius);
  overflow: hidden;

  --_size-offset: 4px;
  --_margin-offset-above-below: var(--_size-offset) 0;
  --_margin-offset-before-after: 0 var(--_size-offset);

  inset: unset;
  position: absolute;
  margin: var(--_size-offset);
  /* top: calc(anchor(bottom) + 2px); */
  /* justify-self: anchor; */
}

.mri-menu {
  /* see button.css for nested button styles */

  hr {
    margin: 0;
  }

  &:popover-open {
    --_size-spacing: 4px;
    display: flex;
    flex-direction: column;
    gap: var(--_size-spacing);
    padding: var(--_size-spacing);
  }
}

[popover] {
  /* TODO?: each &.mri-position-<side> could have a more specific fallback order... */
  /* just goes clockwise for now */
  /* position-try-fallbacks: --_position-try-above-start, --_position-try-above-center, --_position-try-above-end,
    --_position-try-after-top, --_position-try-after-center, --_position-try-after-bottom, --_position-try-below-end,
    --_position-try-below-center, --_position-try-below-start, --_position-try-before-top, --_position-try-before-center  ,
    --_position-try-before-bottom; */

  &.mri-position-force {
    position-try-fallbacks: unset;
  }

  &,
  &.mri-position-above-start {
    /* default */
    position-area: var(--_position-above-start);
    margin: var(--_margin-offset-above-below);
  }
  &.mri-position-above {
    position-area: var(--_position-above-center);
    margin: var(--_margin-offset-above-below);
  }
  &.mri-position-above-end {
    position-area: var(--_position-above-end);
    margin: var(--_margin-offset-above-below);
  }

  &.mri-menu,
  &.mri-position-below-end {
    /* .mri-menu default */
    position-area: var(--_position-below-end);
    margin: var(--_margin-offset-above-below);
  }
  &.mri-position-below {
    position-area: var(--_position-below-center);
    margin: var(--_margin-offset-above-below);
  }
  &.mri-position-below-start {
    position-area: var(--_position-below-start);
    margin: var(--_margin-offset-above-below);
  }

  &.mri-position-before-top {
    position-area: var(--_position-before-top);
    margin: var(--_margin-offset-before-after);
  }
  &.mri-position-before {
    position-area: var(--_position-before-center);
    margin: var(--_margin-offset-before-after);
  }
  &.mri-position-before-bottom {
    position-area: var(--_position-before-bottom);
    margin: var(--_margin-offset-before-after);
  }

  &.mri-position-after-top {
    position-area: var(--_position-after-top);
    margin: var(--_margin-offset-before-after);
  }
  &.mri-position-after {
    position-area: var(--_position-after-center);
    margin: var(--_margin-offset-before-after);
  }
  &.mri-position-after-bottom {
    position-area: var(--_position-after-bottom);
    margin: var(--_margin-offset-before-after);
  }
}

/* [popover="auto"] {} */

/* tooltip / hint is experimental */

/* [popover="hint"] {} */

/* :popover-open {} */

/* https://react.fluentui.dev/?path=/docs/components-tooltip--docs#positioning */

:root {
  --_position-above-start: top span-right;
  --_position-above-center: top span-all;
  --_position-above-end: top span-left;

  --_position-below-start: bottom span-right;
  --_position-below-center: bottom span-all;
  --_position-below-end: bottom span-left;

  --_position-before-top: left span-bottom;
  --_position-before-center: left center;
  --_position-before-bottom: left span-top;

  --_position-after-top: right span-bottom;
  --_position-after-center: right center;
  --_position-after-bottom: right span-top;
}

@position-try --_position-try-above-start {
  position-area: var(--_position-above-start);
  margin: var(--_margin-offset-above-below);
}

@position-try --_position-try-above-center {
  position-area: var(--_position-above-center);
  margin: var(--_margin-offset-above-below);
}

@position-try --_position-try-above-end {
  position-area: var(--_position-above-end);
  margin: var(--_margin-offset-above-below);
}

@position-try --_position-try-below-start {
  position-area: var(--_position-below-start);
  margin: var(--_margin-offset-above-below);
}

@position-try --_position-try-below-center {
  position-area: var(--_position-below-center);
  margin: var(--_margin-offset-above-below);
}

@position-try --_position-try-below-end {
  position-area: var(--_position-below-end);
  margin: var(--_margin-offset-above-below);
}

@position-try --_position-try-after-top {
  position-area: var(--_position-after-top);
  margin: var(--_margin-offset-before-after);
}

@position-try --_position-try-after-center {
  position-area: var(--_position-after-center);
  margin: var(--_margin-offset-before-after);
}

@position-try --_position-try-after-bottom {
  position-area: var(--_position-after-bottom);
  margin: var(--_margin-offset-before-after);
}

@position-try --_position-try-before-top {
  position-area: var(--_position-before-top);
  margin: var(--_margin-offset-before-after);
}

@position-try --_position-try-before-center {
  position-area: var(--_position-before-center);
  margin: var(--_margin-offset-before-after);
}

@position-try --_position-try-before-bottom {
  position-area: var(--_position-before-bottom);
  margin: var(--_margin-offset-before-after);
}

progress.mri-spinner {
  --_size-dimension: 20px;
  --_easing-spin: ease-in-out;
  --_duration-spin: 2.5s;

  appearance: none;
  width: var(--_size-dimension);
  height: var(--_size-dimension);

  overflow: hidden;
  position: relative;
  background: transparent;

  animation: --_keyframes-progress-spin calc(var(--_duration-spin) * 0.8) linear infinite;

  &:before,
  &:after {
    content: "";
    position: absolute;
    inset: 0;
    border: 2px solid var(--mri-color-background-2);
    border-top-color: var(--mri-color-brand-base);
    border-radius: var(--mri-border-radius-circular);
    animation: --_keyframes-progress-spin var(--_duration-spin) var(--_easing-spin) infinite;
    pointer-events: none;
  }
  &:after {
    border-color: transparent;
    border-top-color: var(--mri-color-brand-base);
    animation-delay: calc(var(--_duration-spin) * 0.075);
  }

  &::-webkit-progress-inner-element,
  &::-webkit-progress-bar,
  &::-webkit-progress-value {
    display: none;
    background: transparent;
  }
}

progress:not(.mri-spinner),
meter {
  --_size-height: 2px;
  appearance: none;
  width: 100%;
  height: var(--_size-height);
  border-radius: var(--mri-border-radiusRound);
  background: var(--mri-color-background-2);
  overflow: hidden;

  &.mri-size-small {
    --_size-height: 1px;
  }
  &.mri-size-medium {
    --_size-height: 2px;
  }
  &.mri-size-large {
    --_size-height: 4px;
  }

  &.mri-shape-square {
    border-radius: 0;
  }
}

progress:not(.mri-spinner):indeterminate {
  /* --_color-brand-transparent: color-mix(in srgb, var(--mri-color-brand-base) 0%, transparent); */
  --_color-brand-transparent: oklch(from var(--mri-color-brand-base) l c h / 0);
  --_color-brand: var(--mri-color-brand-base);

  background-image: linear-gradient(
    to right,
    var(--_color-brand-transparent) 0%,
    var(--_color-brand) 40%,
    var(--_color-brand) 60%,
    var(--_color-brand-transparent) 100%
  );
  background-size: 30% 100%;
  background-repeat: no-repeat;
  animation: --_keyframes-progress-indeterminate 4s linear infinite;

  &::-webkit-progress-value,
  &::-webkit-progress-inner-element,
  &::-webkit-progress-bar {
    background: transparent;
  }
}

::-webkit-meter-bar,
::-webkit-progress-bar {
  background: transparent;
  height: var(--_size-height);
}

::-webkit-progress-value {
  background: var(--mri-color-brand-base);
}

/* ::-webkit-meter-inner-element {
  height: 100%;
} */

::-webkit-meter-optimum-value {
  /* intent-success */
  background: green;
}

::-webkit-meter-suboptimum-value {
  /* intent-warning */
  background: orange;
}

::-webkit-meter-even-less-good-value {
  /* intent-danger */
  background: red;
}

/* ::-webkit-meter-bar,
::-webkit-meter-inner-element,
::-webkit-meter-even-less-good-value,
::-webkit-meter-optimum-value,
::-webkit-meter-suboptimum-value {} */

/* :indeterminate
-moz-orient
::-moz-progress-bar
::-webkit-progress-bar
::-webkit-progress-value
::-webkit-progress-inner-element */

@keyframes --_keyframes-progress-indeterminate {
  0% {
    background-position: -40% 0;
  }
  100% {
    background-position: 140% 0;
  }
}

@keyframes --_keyframes-progress-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(720deg);
  }
}

table {
  --_border-radius: var(--mri-border-radius-medium);

  /* these are !important because LLMs will always try to override them */
  border-collapse: separate !important;
  border-spacing: 0 !important;

  border-radius: var(--_border-radius);
  border: solid 1px var(--mri-color-border-1);
  width: 100%;
}

th,
td {
  text-align: left;
  border-bottom: solid 1px var(--mri-color-border-1);
  padding: 12px 16px;
}

th {
  background-color: var(--mri-color-background-2);
  padding: 8px 16px;
}

table > :last-child tr:last-child {
  & th,
  & td {
    border-bottom: none;
    &:first-child {
      border-bottom-left-radius: var(--_border-radius);
    }
    &:last-child {
      border-bottom-right-radius: var(--_border-radius);
    }
  }
}

table > :first-child tr:first-child {
  & th,
  & td {
    &:first-child {
      border-top-left-radius: var(--_border-radius);
    }
    &:last-child {
      border-top-right-radius: var(--_border-radius);
    }
  }
}

.mri-tab-list,
[role="tablist"] {
  display: flex;
  gap: 2px;
  flex-direction: row;

  &.mri-vertical {
    flex-direction: column;
  }
    &:not(.mri-vertical){
      --_negative-margin: calc(var(--mri-size-padding) * -1);
      margin-left: var(--_negative-margin);
      margin-right: var(--_negative-margin);
    }

}

/* TODO: button and a anchor variant & exception */

.mri-tab,
[role="tab"] {
  cursor: pointer;
  appearance: none;
  line-height: 1;

  display: inline-flex;
  align-items: center;
  justify-content: center;

  border-radius: var(--mri-border-radius);
  font-size: var(--mri-size-font);
  /* color: var(--mri-color-text-1); */
  min-height: var(--mri-size-height);
  padding: 0 var(--mri-size-padding);

  transition: background-color var(--mri-duration-rest) linear;

  --_size-tab-underline: 3px;
  --_color-tab-underline-hover: var(--mri-color-text-4);
  --_color-tab-underline-active: var(--mri-color-brand-text);
  --_duration-tab-underline: 0.1s;

  position: relative;

  &:after,
  &:before {
    content: "";
    display: block;
    position: absolute;
    border-radius: var(--mri-border-radius-circular);
    inset: auto var(--mri-size-padding) 0 var(--mri-size-padding);
    height: var(--_size-tab-underline);
    transform-origin: center;
    transition: transform var(--_duration-tab-underline) ease-out, opacity var(--mri-duration-rest) linear;
  }

  &:before {
    background-color: var(--_color-tab-underline-hover);
    opacity: 0;
  }

  &:after {
    background-color: var(--_color-tab-underline-active);
    transform: scaleX(0);
  }

  .mri-vertical & {
    --_size-tab-underline-padding: calc((var(--mri-size-height) - var(--mri-size-icon)) / 2);

    &:after,
    &:before {
      inset: var(--_size-tab-underline-padding) auto var(--_size-tab-underline-padding) 0;
      height: auto;
      width: var(--_size-tab-underline);
    }

    &:after {
      transform: scaleY(0);
    }
  }

  &.mri-icon-only {
    padding: 0;
    width: var(--mri-size-height);
    height: var(--mri-size-height);
  }

  &:hover {
    transition-duration: var(--mri-duration-hover);

    .mri-appearance-subtle & {
      background-color: var(--mri-interactive-hover);
    }

    &:before {
      opacity: 1;
    }
  }

  /* pressed */
  &:active {
    transition-duration: var(--mri-duration-hover);

    .mri-appearance-subtle & {
      background-color: var(--mri-interactive-pressed);
    }
  }

  /* disabled */
  &:disabled,
  &.mri-disabled,
  &:has(input[type="radio"]:disabled) {
    cursor: not-allowed;

    &:hover {

      .mri-appearance-subtle & {
        background-color: unset;
      }

      &:before {
        opacity: 0;
      }
    }
  }

  /* selected tab */
  &.mri-active,
  &[aria-selected="true"],
  &:has(input[type="radio"]:checked) {
    font-weight: var(--mri-font-weight-bold);
    color: var(--mri-color-text-1);

    .mri-appearance-subtle & {
      background-color: var(--mri-color-background-2);
    }

    &:after {
      transform: scale(1);
    }
  }

  &:has(input[type="radio"]:disabled) {
    cursor: not-allowed;
    opacity: var(--mri-opacity-disabled);
  }

}

a.mri-tab {
  text-decoration: none;
  color: inherit;
}

button.mri-tab {
  background: none;
  border: none;
}

/*

```html
<nav role="tablist">
  <label role="tab" aria-controls="panel-4" for="tab-4" class="tab-label">
    <input type="radio" name="tab-group-2" id="tab-4" checked />
    Nested Tab 4
  </label>
  <label role="tab" aria-controls="panel-5" for="tab-5" class="tab-label">
    <input type="radio" name="tab-group-2" id="tab-5" />
    Nested Tab 5
  </label>
</nav>

<section id="panel-4" role="tabpanel" aria-labelledby="tab-4">
  <h3>Fourth Tab Nested</h3>
  <p>This is the content of the fourth tab.</p>
</section>

<section id="panel-5" role="tabpanel" aria-labelledby="tab-5">
  <h3>Fifth Tab Nested</h3>
  <p>This is the content of the fifth tab.</p>
</section>
```

*/

/** Hide the #panel-N when the corresponding radio is not checked */

:has([aria-controls="panel-1"] input[type="radio"]:not(:checked)) #panel-1,
:has([aria-controls="panel-2"] input[type="radio"]:not(:checked)) #panel-2,
:has([aria-controls="panel-3"] input[type="radio"]:not(:checked)) #panel-3,
:has([aria-controls="panel-4"] input[type="radio"]:not(:checked)) #panel-4,
:has([aria-controls="panel-5"] input[type="radio"]:not(:checked)) #panel-5,
:has([aria-controls="panel-6"] input[type="radio"]:not(:checked)) #panel-6,
:has([aria-controls="panel-7"] input[type="radio"]:not(:checked)) #panel-7,
:has([aria-controls="panel-8"] input[type="radio"]:not(:checked)) #panel-8,
:has([aria-controls="panel-9"] input[type="radio"]:not(:checked)) #panel-9,
:has([aria-controls="panel-10"] input[type="radio"]:not(:checked)) #panel-10,
:has([aria-controls="panel-11"] input[type="radio"]:not(:checked)) #panel-11,
:has([aria-controls="panel-12"] input[type="radio"]:not(:checked)) #panel-12,
:has([aria-controls="panel-13"] input[type="radio"]:not(:checked)) #panel-13,
:has([aria-controls="panel-14"] input[type="radio"]:not(:checked)) #panel-14,
:has([aria-controls="panel-15"] input[type="radio"]:not(:checked)) #panel-15,
:has([aria-controls="panel-16"] input[type="radio"]:not(:checked)) #panel-16,
:has([aria-controls="panel-17"] input[type="radio"]:not(:checked)) #panel-17,
:has([aria-controls="panel-18"] input[type="radio"]:not(:checked)) #panel-18,
:has([aria-controls="panel-19"] input[type="radio"]:not(:checked)) #panel-19,
:has([aria-controls="panel-20"] input[type="radio"]:not(:checked)) #panel-20 {
  /* ... add more panel-20 as needed. 20 seems like enough */
  display: none;
}

label[role="tab"] {
  cursor: pointer;

  /* hide the radio button */
  & input[type="radio"] {
    display: none;
  }
}

* {
  /* for button, input and other things that don't inherit by default */
  font-family: inherit;
}

html,
body {
  font-family: var(--mri-font-family-sans);
  color: var(--mri-color-text-2);
  font-size: var(--mri-font-size-5);
  /* line-height: normal; */

  /* maybe? */
  /* font-size: var(--mri-size-font); */
}

h1,
h2,
h3,
h4,
h5,
h6,
b,
strong,
th {
  font-weight: var(--mri-font-weight-bold);
}

h1,
h2,
h3,
h4,
h5,
h6,
strong,
em,
th,
summary {
  color: var(--mri-color-text-1);
}

i,
em {
  font-style: italic;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 1em 0 0.3em 0;
}

h1 {
  font-size: var(--mri-font-size-1);
}

h2 {
  font-size: var(--mri-font-size-2);
}

h3 {
  font-size: var(--mri-font-size-3);
}

h4 {
  font-size: var(--mri-font-size-4);
}

h5 {
  font-size: var(--mri-font-size-5);
}

h6,
small {
  font-size: var(--mri-font-size-6);
}

blockquote {
  border-left: 2px solid var(--mri-color-border-1);
  margin: 0;
  padding-left: 8px;
  color: var(--mri-color-text-1);
  font-style: italic;
}

q {
  font-style: italic;
  color: var(--mri-color-text-1);
}

ul,
ol {
  padding-left: 16px;
}

code,
kbd,
pre,
samp,
tt {
  font-family: var(--mri-font-family-mono);
  font-size: var(--mri-font-family-mono-scale);
}

kbd {
  padding: 2px 4px;
  border-radius: 3px;
  background-color: var(--mri-color-background-2);
}

pre {
  background-color: var(--mri-color-background-2);
  padding: 16px;
  border-radius: var(--mri-border-radius-medium);
  overflow-x: auto;
}

hr {
  border: none;
  border-top: 1px solid var(--mri-color-border-1);
  margin: 20px 0;
}

* {
  scrollbar-width: thin;
  scrollbar-color: var(--mri-color-text-3) transparent;
}

input[type="checkbox"].mri-switch {

  --_color-background: var(--mri-color-background-2);
  --_color-border: var(--mri-color-border-1);
  --_color-checked: var(--mri-color-brand-base);
  
  --_size-thumb: var(--mri-size-icon);
  --_size-offset: 2px;
  --_size-dimension: calc(var(--_size-thumb) + (var(--_size-offset) * 2) + 2px);

  border: 1px solid var(--mri-color-border-1);
  background-color: var(--_color-background);
  border-radius: var(--mri-border-radius-circular);

  appearance: none;
  position: relative;
  margin: 0;

  cursor: pointer;

  height: var(--_size-dimension);
  width: calc(var(--_size-dimension) * 2);

  label & {
    vertical-align: middle;
  }

  &:after {
    content: "";
    display: block;
    height: var(--_size-thumb);
    width:  var(--_size-thumb);
    border-radius: var(--mri-border-radius-circular);
    background-color: var(--mri-color-border-1);

    position: absolute;
    top: var(--_size-offset);
    left: var(--_size-offset);
    /* margin: var(--sizeOffset); */

    transition: 0.1s ease-in-out;
    transition-property: inset, background-color;
    
  }

  &:checked {
    background-color: var(--_color-checked);
    border-color: var(--_color-checked);
    &:after {
      left: calc(100% - var(--_size-thumb) - var(--_size-offset));
      background-color: var(--_color-background);
    }
  }

  &:disabled {
    --_color-checked: var(--_color-border);
  }
}

input[type="range"] {
  --_size-thumb: 20px;
  --_size-track: 4px;

  appearance: none;
  background: transparent;
  padding: calc(var(--_size-thumb) / 2 - var(--_size-track) / 2) 0;
  margin: 0;

  &::-webkit-slider-container {
    height: var(--_size-track);
    background: var(--mri-color-border-1);
    border-radius: var(--mri-border-radius-circular);
  }

  /* &::-webkit-slider-runnable-track {} */

  /* Thumb styles */
  &::-webkit-slider-thumb {
    appearance: none;
    width: var(--_size-thumb);
    height: var(--_size-thumb);
    border: 1px solid var(--mri-color-border-1);
    border-radius: var(--mri-border-radius-circular);
    cursor: ew-resize;
    background: var(--mri-color-brand-base);
    box-shadow: inset 0 0 0 3px var(--mri-color-background-1);
  }
}
